[1mdiff --git a/afl-fuzz.c b/afl-fuzz.c[m
[1mindex 1cb8019..ffd22c9 100644[m
[1m--- a/afl-fuzz.c[m
[1m+++ b/afl-fuzz.c[m
[36m@@ -7701,7 +7701,11 @@[m [mstatic void save_cmdline(u32 argc, char** argv) {[m
 [m
 void yhget(){[m
   int num;[m
[31m-  scanf("%d", &num);[m
[32m+[m[32m  while(~scanf("%d", &num)){[m
[32m+[m[32m    if(num == 1)[m
[32m+[m[32m    break;[m
[32m+[m[32m  }[m
[32m+[m[32m  printf("ok\n");[m
 }[m
 [m
 #ifndef AFL_LIB[m
[36m@@ -8008,6 +8012,7 @@[m [mprintf("fuzz start\n");[m
   while (1) {[m
 [m
     u8 skipped_fuzz;[m
[32m+[m[32m    printf("skipped_fuzz = %ld\n", skipped_fuzz);[m
 [m
     cull_queue();[m
 [m
[36m@@ -8019,14 +8024,16 @@[m [mprintf("fuzz start\n");[m
       queue_cur         = queue;[m
 [m
       while (seek_to) {[m
[32m+[m[32mprintf("seek_to = %lld\n", seek_to);[m
         current_entry++;[m
         seek_to--;[m
         queue_cur = queue_cur->next;[m
       }[m
 [m
       show_stats();[m
[31m-[m
[32m+[m[32myhget();[m
       if (not_on_tty) {[m
[32m+[m[32m      printf("not_on_tty = true");[m
         ACTF("Entering queue cycle %llu.", queue_cycle);[m
         fflush(stdout);[m
       }[m
[36m@@ -8041,7 +8048,7 @@[m [mprintf("fuzz start\n");[m
       } else cycles_wo_finds = 0;[m
 [m
       prev_queued = queued_paths;[m
[31m-[m
[32m+[m[32myhget();[m
       if (sync_id && queue_cycle == 1 && getenv("AFL_IMPORT_FIRST"))[m
         sync_fuzzers(use_argv);[m
 [m
